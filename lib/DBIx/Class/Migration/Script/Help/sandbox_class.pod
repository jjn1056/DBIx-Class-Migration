=head1 NAME

DBIx::Class::Migration::Script::Help::sandbox_class

=head1 SYNOPSIS

    dbic-migration install --schema_class MyApp::Schema --sandbox_class MySQLSandbox

=head1 DESCRIPTION

=over 4

=item  Aliases

T, sb

=item Value

String (default: SqliteSandbox)

=back

If you don't have a target database for your migrations (as you might not for
your development setup, or during initial prototyping) we automatically create
a local database sandbox in your L<DBIx::Class::Migration::Script/"target_dir">.

By default this sandbox is a file based L<DBD::Sqlite> database, which is an
easy option since changes are good this is already installed on your development
computer (and if not it is trivial to install).  

You can change this to either 'PostgresqlSandbox' or 'MySQLSandbox', which will
create a sandbox using either L<DBIx::Class::Migration::MySQLSandbox> or 
L<DBIx::Class::Migration::PostgresqlSandbox> (which in term require the separate
installation of either L<Test::mysqld> or L<Test::Postgresql58>).

Like some of the other option flags you can specify with an %ENV setting:

    export DBIC_MIGRATION_SANDBOX_CLASS=MySQLSandbox

The default sqlite sandbox is documented at L<DBIx::Class::Migration::SQLiteSandbox>
although this single file database is pretty straightforward to use.

=head1 SEE ALSO

L<DBIx::Class::Migration>, L<DBIx::Class::Migration::Script>,
L<DBIx::Class::Migration::Features>, L<DBIx::Class::Migration::Tutorial>

=head1 AUTHOR

See L<DBIx::Class::Migration> for author information

=head1 COPYRIGHT & LICENSE

See L<DBIx::Class::Migration> for copyright and license information

=cut











